var SpiderGame=Backbone.Model.extend({defaults:{current:false,suits:1,debug:false,timeStart:0,timePaused:0,undoPenalty:0,seed:0},scoreDefs:{storageEngine:"chromesync",classes:["regular"],fields:{time:{type:"average"},movesAverage:{type:"average"},movesLowest:{type:"custom"},won:{type:"addition",streak:true},lost:{type:"addition",streak:true},}},move:false,undoHistory:[],positions:{discard:19,deck:18,foundation:10,tableau:0},startMove:function(){this.move=[]},endMove:function(){if(this.move&&this.move.length>0){this.undoHistory.push(this.move);this.move=false}this.trigger("change:piles")},undoMove:function(){var a=this.undoHistory.pop();if(typeof a=="undefined"){this.trigger("change:undo",false);return}this.set("undoPenalty",this.get("undoPenalty")+1);this.trigger("change:undo",true);for(var b=0;b<a.length;b++){if(a[b].action=="visibility"){a[b].card.set("visibility",a[b].visibility)}if(a[b].action=="pos"){this.moveCards(a[b].card.pos.row,a[b].card.pos.height,a[b].oldPos.row,true)}}this.move=false;this.endMove()},getMoveCount:function(){return this.undoHistory.length+this.get("undoPenalty")*2},getTime:function(b){if(typeof b=="undefined"){b="mins"}var a=Math.round(((new Date()).getTime()-this.get("timeStart"))/1000);if(b=="secs"){return a}else{if(b=="mins"){return this.getFormattedTime(a)}}},getFormattedTime:function(a){var b=Math.round(a/60);a=Math.round(a%60);if(a<10){a="0"+a}return b+":"+a},getScore:function(){var b=0;for(var a=this.positions.foundation;a<this.positions.deck;a++){if(this.piles[a].length>0){b++}}return 500-this.getMoveCount()+b*100},initialize:function(){this.piles=[];for(var a=0;a<20;a++){this.piles[a]=[]}switch(this.get("suits")){case 1:this.cards=new Deck({deckCount:8,suits:[3],seed:this.get("seed")});break;case 2:this.cards=new Deck({deckCount:4,suits:[2,3],seed:this.get("seed")});break;case 4:default:this.cards=new Deck({deckCount:2,seed:this.get("seed")})}this.attachEvents();this.cards.shuffle();for(var a=0;a<54;a++){var c=this.cards.next();if(a>43){this.setCardVisibility(c,true)}this.addCard(c,a%10)}for(var a=0;a<50;a++){this.addCard(this.cards.next(),this.positions.deck)}var b=this;this.bind("change:piles",function(){b.checkGameStatus()});this.move=false;this.set("timeStart",(new Date()).getTime());this.undoHistory=[]},getHint:function(){var a={};var m=[];for(var f=this.positions.tableau;f<this.positions.foundation;f++){var b=this.piles[f].length;if(b>0){var d=this.getHighestMovableCard(f);if(b-d.pos.height==12){return{src:d,dest:"foundation"}}var l=(d.get("number")<10?"0":"")+d.get("number")+"-"+d.get("suitName");a[l]=d;m.push(l)}}m.sort();var h=false;for(var f=m.length;f>0;f--){var g=a[m[f-1]];var c=this.piles[g.pos.row][g.pos.height-2];for(var e=this.positions.tableau;e<this.positions.foundation;e++){var k=this.getTopCard(e);if(k&&k.get("number")==g.get("number")+1){if(k.get("suitName")==g.get("suitName")){return{src:g,dest:k}}else{if(h==false&&(typeof c!="undefined"&&k.get("number")!=c.get("number"))){h={src:g,dest:k}}}}}}if(h){return h}},attachEvents:function(){var b=this;for(var a=0;a<this.cards.cards.length;a++){this.cards.cards[a].bind("change:css",function(c){b.trigger("change:css",c)})}},deal:function(){var a=this.piles[this.positions.deck];if(this.deckSize()==0){return}var c=this;for(var b=this.positions.tableau;b<this.positions.foundation;b++){var d=a.pop();this.setCardVisibility(d,true);c.piles[b].push(d);c.updatePos(c.piles[b][c.piles[b].length-1],b,c.piles[b].length)}this.endMove()},dealSolitaire:function(){var a=this.piles[this.positions.discard];if(deck.length>0){a.push(deck.pop())}else{this.piles[this.positions.deck]=a.reverse();this.piles[this.positions.discard]=[];for(var b=0;b<deck.length;b++){this.updatePos(this.piles[this.positions.deck][b],this.positions.deck,b)}}this.endMove()},addCard:function(a,b){this.piles[b].push(a);this.updatePos(a,b)},setCardVisibility:function(b,a,c){if(typeof b=="undefined"){return}if(!c){if(!this.move){this.startMove()}this.move.push({action:"visibility",card:b,visibility:b.get("visibility")})}b.set("visibility",a)},updatePos:function(b,d,a,c){if(!c&&typeof b.pos!="undefined"){if(!this.move){this.startMove()}this.move.push({action:"pos",card:b,oldPos:_.extend({},b.pos),visibility:b.get("visibility")})}b.pos={row:d,height:_.isUndefined(a)?this.piles[d].length:a};if(d<this.positions.foundation){b.pos.name="tableau";b.pos.col=d}else{if(d<this.positions.deck){b.pos.name="foundation";b.pos.col=d-this.positions.foundation}else{if(d==this.positions.deck){b.pos.name="deck";b.pos.col=0}else{if(d==this.positions.discard){b.pos.name="discard";b.pos.col=0}else{console.log("uhhh...",d)}}}}return b},moveCard:function(d,b){if(!d||!b){return}var f=this.piles[d.pos.row];var a=this.piles[b.pos.row];var e=this.checkColumn(d.pos.row,d.pos.height-1);var c=this.getTopCard(b.pos.row);if(this.get("debug")){console.log("debug mode, allowing move");this.moveCards(d.pos.row,d.pos.height,b.pos.row,false);return true}if(d.pos.name=="foundation"||!e.ordered||e.mixedSuit){return false}if(b.pos.row>=this.positions.foundation&&b.pos.row<this.positions.deck){if(this.canMoveCard(this.getCardFromBottom(d.pos.row,13))){this.moveCards(d.pos.row,d.pos.height,b.pos.row,false);return true}return false}if((a.length==0)||e.firstNum==c.get("number")-1){this.moveCards(d.pos.row,d.pos.height,b.pos.row,false);if(this.piles[b.pos.row].length>12&&this.canMoveCard(this.getCardFromBottom(b.pos.row,13))){this.moveToFoundation(this.getCardFromBottom(b.pos.row,13))}return true}return false},getCardFromBottom:function(a,b){if(typeof this.piles[a][this.piles[a].length-b]!=undefined){return this.piles[a][this.piles[a].length-b]}return false},moveCards:function(f,b,c,e){var a=this.piles[f].splice(b-1);for(var d=0;d<a.length;d++){this.piles[c].push(a[d]);this.updatePos(a[d],c,this.piles[c].length,e)}if(b>=2){this.setCardVisibility(this.piles[f][b-2],true,e)}this.endMove()},checkGameStatus:function(){if(this.hasWinState()){this.gameWon();return}},gameWon:function(){this.writeGameStats("won",function(){this.trigger("game:won")})},loadGameStats:function(a){if(!this.score){this.score=new Scoreboard(this.scoreDefs);this.score.load(a)}else{a()}},writeGameStats:function(c,d){var b=this;var a=this.getMoveCount();if(a<10){d.call(b);return}this.loadGameStats(function(){var e=b.score.getField("regular","movesLowest");if(e==0||e>a){e=a}if(c=="won"){b.score.updateFields("regular",{time:b.getTime("secs"),movesAverage:a,movesLowest:e,won:1});b.score.resetStreak("regular","lost")}else{b.score.updateField("regular","lost",1);b.score.resetStreak("regular","won")}b.score.save(function(){d.call(b)})})},getGameStats:function(b){var a=this;this.loadGameStats(function(){b(a.score.getFields())})},getBadges:function(b){var a=this;this.getGameStats(function(d){var c=[];if(d.regular.won.streakLength){switch(d.regular.won.streakLength){case 5:case 10:case 25:case 50:c.push({badge:"winningstreak-small",val:d.regular.won.streakLength})}if(d.regular.won.streakLength%1000==0){c.push({badge:"winningstreak-huge",val:d.regular.won.streakLength})}else{if(d.regular.won.streakLength%100==0){c.push({badge:"winningstreak-large",val:d.regular.won.streakLength})}}}if(a.getMoveCount()<=d.regular.movesLowest.val){c.push({badge:"best-moves",val:a.getMoveCount()})}if(a.getTime("secs")<=d.regular.time.val){c.push({badge:"improved-time",val:a.getTime("secs")})}b(c)})},hasWinState:function(){var a=13*8;for(var b=this.positions.foundation;b<this.positions.deck;b++){a-=this.piles[b].length}if(a==0){return true}return false},deckSize:function(){return this.piles[this.positions.deck].length},getCards:function(){return _.isUndefined(this.cards.cards)?[]:this.cards.cards},getTopCard:function(a){return this.getCardFromBottom(a,1)},getHighestMovableCard:function(c){if(this.piles[c].length==0){return false}var b=this.getTopCard(c);if(this.piles[c].length==1){return b}for(var a=this.piles[c].length-2;a>=0;a--){if(!this.canMoveCard(this.piles[c][a])){return b}b=this.piles[c][a]}return b},checkColumn:function(f,g){if(_.isUndefined(this.piles[f][g])){return false}var e={mixedSuit:false,alternatingColor:true,ordered:true,suitName:this.piles[f][g].get("suitName"),firstNum:this.piles[f][g].get("number"),cards:this.piles[f].length-g};var d=false;var b=false;for(var c=g;c<this.piles[f].length;c++){var a=this.piles[f][c];if(c==g){e.suitName=a.get("suitName");e.firstNum=a.get("number")}else{if(d!=a.get("number")+1){e.ordered=false}}if(e.suitName!=a.get("suitName")){e.mixedSuit=true;e.suitName="mixed"}if(b!=false){if(b==a.getColor()){e.alternatingColor=false}}d=a.get("number");b=a.getColor()}return e},canMoveCard:function(a){if(this.get("debug")){return true}if(typeof a=="undefined"){return false}if(a.get("visibility")==false){return false}var b=this.checkColumn(a.pos.row,a.pos.height-1);if(b.ordered&&b.mixedSuit===false){return true}return false},getEmptyFoundation:function(){for(var a=this.positions.foundation;a<this.positions.deck;a++){if(this.piles[a].length==0){return a}}return false},moveToFoundation:function(a){var b=a.pos.row;if(this.piles[b].length-a.pos.height<12||this.piles[b][this.piles[b].length-1].get("number")!=1){return false}this.moveCard(a,{name:"foundation",pos:{row:this.getEmptyFoundation()}})}});